{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,UAAWF,SAASC,cAAc,kBAyBpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BbP,EAAKI,UAAUW,iBAAiB,SAEhC,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAASlB,EAAKC,OAAOiB,OAAOC,MAClC,IAAIC,EAAWC,OAAOrB,EAAKC,OAAOM,MAAMY,OACxC,MAAMG,EAAOD,OAAOrB,EAAKC,OAAOqB,KAAKH,OAErC,IAAK,IAAII,EAAI,EAAGA,GAAKL,EAAQK,GAAK,EAChClB,EAAckB,EAAGH,GACdI,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA2B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBT,EAAA2B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,IAGhEa,GAAYE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  btnSubmit: document.querySelector('.form >button'),\n};\n\nrefs.btnSubmit.addEventListener('click', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const amount = refs.formEl.amount.value;\n  let delayInp = Number(refs.formEl.delay.value);\n  const step = Number(refs.formEl.step.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayInp)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInp += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","btnSubmit","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","amount","value","delayInp","Number","step","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.4a6a4f4e.js.map"}