{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,UAAWF,SAASC,cAAc,kBAkCpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAxCPP,EAAKI,UAAUW,iBAAiB,SAEhC,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAASC,OAAOnB,EAAKC,OAAOiB,OAAOE,OACnCC,EAAWF,OAAOnB,EAAKC,OAAOM,MAAMa,OACpCE,EAAOH,OAAOnB,EAAKC,OAAOqB,KAAKF,OACnCpB,EAAKI,UAAUmB,UAAW,EAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAChCnB,EAAcmB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBT,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBT,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAG9Dc,GAAYC,EAGdR,YAAW,WACTd,EAAKI,UAAUmB,UAAW,C,GACzBF,GAEHrB,EAAKC,OAAOiB,OAAOE,MAAQ,GAC3BpB,EAAKC,OAAOM,MAAMa,MAAQ,GAC1BpB,EAAKC,OAAOqB,KAAKF,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  btnSubmit: document.querySelector('.form >button'),\n};\n\nrefs.btnSubmit.addEventListener('click', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let amount = Number(refs.formEl.amount.value);\n  let delayInp = Number(refs.formEl.delay.value);\n  let step = Number(refs.formEl.step.value);\n  refs.btnSubmit.disabled = true;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayInp)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInp += step;\n  }\n\n  setTimeout(() => {\n    refs.btnSubmit.disabled = false;\n  }, delayInp);\n\n  refs.formEl.amount.value = '';\n  refs.formEl.delay.value = '';\n  refs.formEl.step.value = '';\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","btnSubmit","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","amount","Number","value","delayInp","step","disabled","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.79edfbc6.js.map"}