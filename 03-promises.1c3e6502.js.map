{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,UAAWF,SAASC,cAAc,kBAoCpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1CbP,EAAKI,UAAUW,iBAAiB,SAIhC,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAASC,OAAOnB,EAAKC,OAAOiB,OAAOE,OACnCC,EAAWF,OAAOnB,EAAKC,OAAOM,MAAMa,OACpCE,EAAOH,OAAOnB,EAAKC,OAAOqB,KAAKF,OACnCpB,EAAKI,UAAUmB,UAAW,EAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAChCnB,EAAcmB,EAAGH,GACdI,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBT,EAAA4B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBT,EAAA4B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAGhEc,GAAYC,EAGdR,YAAW,KACTd,EAAKI,UAAUmB,UAAW,CAAK,GAC9BF,GAEHrB,EAAKC,OAAOiB,OAAOE,MAAQ,GAC3BpB,EAAKC,OAAOM,MAAMa,MAAQ,GAC1BpB,EAAKC,OAAOqB,KAAKF,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  btnSubmit: document.querySelector('.form >button'),\n};\n\nrefs.btnSubmit.addEventListener('click', onFormSubmit);\n\n// refs.btnSubmit.disabled = false;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let amount = Number(refs.formEl.amount.value);\n  let delayInp = Number(refs.formEl.delay.value);\n  let step = Number(refs.formEl.step.value);\n  refs.btnSubmit.disabled = true;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delayInp)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInp += step;\n  }\n\n  setTimeout(() => {\n    refs.btnSubmit.disabled = false;\n  }, delayInp);\n\n  refs.formEl.amount.value = '';\n  refs.formEl.delay.value = '';\n  refs.formEl.step.value = '';\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","btnSubmit","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","amount","Number","value","delayInp","step","disabled","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.1c3e6502.js.map"}